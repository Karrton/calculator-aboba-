name: Calculator CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'epic/**'
      - 'feature/**'
      - 'bugfix/**'
      - 'refactor/**'
  pull_request:
    branches:
      - main
      - develop
      - 'epic/**'

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  # ============================================
  # STAGE 1: Checkstyle + GitHub API
  # ============================================
  checkstyle:
    name: Stage 1 - Code Quality & PR Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub requests
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Run Checkstyle
        run: |
          echo "Запуск проверки кода (Checkstyle)..."
          ./gradlew checkstyleMain checkstyleTest
      
      - name: List team members
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "Получение списка участников команды..."
          python3 scripts/check_pr.py \
            --token "$GITHUB_TOKEN" \
            --repo "${{ github.repository }}" \
            --list-members
      
      - name: Check PR size
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Проверка размера PR..."
          python3 scripts/check_pr.py \
            --token "$GITHUB_TOKEN" \
            --repo "${{ github.repository }}" \
            --pr-number "${{ github.event.pull_request.number }}" \
            --check-size
      
      - name: Update epic PR description
        if: github.event_name == 'pull_request' && contains(github.head_ref, 'epic/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Обновление описания epic PR..."
          python3 scripts/check_pr.py \
            --token "$GITHUB_TOKEN" \
            --repo "${{ github.repository }}" \
            --pr-number "${{ github.event.pull_request.number }}" \
            --update-epic
      
      - name: Upload Checkstyle reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-reports
          path: build/reports/checkstyle/
          retention-days: 1

  build:
    name: Stage 2 - Build Application
    runs-on: ubuntu-latest
    needs: checkstyle
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: |
          echo "Запуск сборки приложения..."
          ./gradlew build -x test
      
      - name: Build Fat JAR
        run: |
          echo "Создание fat JAR файла..."
          ./gradlew fatJar
      
      - name: List build artifacts
        run: |
          echo "Артефакты сборки:"
          ls -lah build/libs/
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/libs/*.jar
            build/distributions/
          retention-days: 30
      
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests/
          retention-days: 7

  tests:
    name: Stage 3 - Unit Tests
    runs-on: ubuntu-latest
    needs: checkstyle
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Run tests
        run: |
          echo "Запуск unit тестов..."
          ./gradlew test
      
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests/
          retention-days: 7

  publish:
    name: Stage 4 - Publish Artifacts
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/

      - name: Display artifacts
        run: |
          echo "Публикация артефактов..."
          echo "Version: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          ls -lah build/libs/

      - name: Upload to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: calculator-release-${{ github.sha }}
          path: build/libs/*.jar
          retention-days: 30

      - name: Create Release (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*-all.jar
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}